use('DadosGeo')

// Listar a UF, nome e longitude de todos os estados com a longitude menor que -63

db.estados.find({longitude: {$lt: -63}},
                {_id: 0, uf: 1, nome: 1, longitude: 1})

// Listas a UF, nome e codigoUF de toos os estados com o código entre 10 e 20
use('DadosGeo')

db.estados.find({codigo_uf: {$lte: 20, $gte:10}}, 
                {_id: 0, uf: 1, nome: 1, codigo_uf: 1})

use('DadosGeo')
db.estados.find({$and:
                    [
                        {codigo_uf: {$gte: 10}}, {codigo_uf: {$lte: 20}}
                    ]
                },
    { _id: 0, uf: 1, nome: 1, codigo_uf: 1 }).count()

// Localizar todos os estados cujo nome começam com "Rio"

use('DadosGeo')
db.estados.find({nome: {$regex:/^rio/i}},
                { })
                
use('DadosGeo')
db.estados.find({nome: /^rio/i},
                { })

// Localizar todos os estados cujo nome começam com "Rio" em ordem alfabética

use('DadosGeo')
db.estados.find({ nome: /^rio/i },
    {codigo_uf: 1, nome: 1}).sort({nome: 1})

// Retorne todos os municípios que contenham no nome "Itu", retornando em ordem alfabética, limitando a 5 registros

use('DadosGeo')
db.municipios.find({nome: /itu/i},
                    {_id: 0, codigo_uf: 1, nome: 1})
                    .sort({nome: 1})
                    .skip(10)
                    .limit(10)

// Listando todos os municípios pertencentes a uma uf
use('DadosGeo')
db.estados.aggregate(
        [
            {
                $lookup: {
                  from: 'municipios',
                  localField: 'codigo_uf',
                  foreignField: 'codigo_uf',
                  as: 'lista_municipios'
                }
            }
        ]
    )

use('DadosGeo')
db.municipios.aggregate(
        [
            {
                $lookup: {
                  from: 'estados',
                  localField: 'codigo_uf',
                  foreignField: 'codigo_uf',
                  as: 'detalhe_estado'
                }
            }
        ]
    )